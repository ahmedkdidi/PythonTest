# -*- coding: utf-8 -*-
"""pythonapp.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1t4Sbf7GWV1ZsLt8DhacF7aR3Yq0KONRJ
"""

#exercice 1
def tri_croissant(l):
  for i in range(1,len(l)):
    K=l[i]
    j=i
    while j>0 and K<l[j-1]:
      l[j]=l[j-1]
      j-=1
    l[j]=K
  return l

#exercice 2
import pandas as pd
import json
df=pd.read_excel('test.xlsx')     # read the excel file into dataframe
df=df.drop(columns=['Prix', 'Prix.1'])    # remove the two empty columns
df=df.drop([0,1,2],0)    # remove the first 3 rows (we don't need them)
df=df.dropna(how='all')    # delete nan rows
df=df.drop([34,35,36,40,42],0)   # delete the last 5 rows (we don't need them)
df=df.reset_index()   # reset the index to be from 0 to 21
df=df.drop(columns=['index'])   # remove the index column
df=df.rename(columns={"N°": "N° d'ordre", "Unnamed: 1": "désignation des travaux", "Unnamed: 2": "Unité", "Unnamed: 3": "Quantité"}) #rename the columns with their actual names
L=[]
N=22 #number of orders
for i in range(N):
  d=dict() 
  if type(df.iloc[i][0])==str : # in case we have the references
    d["order"]=i
    d["type"]='SECTION'
    d["reference"]=df.iloc[i][0]
    d["level"]=1
    d["description"]=df.iloc[i][1]
  else:
    d["order"]=i
    d["type"]='CELL'
    d["description"]=df.iloc[i][1]
    d["unity"]=df.iloc[i][2]
    d["quantity"]=df.iloc[i][3]
  L.append(d)
D={}
D['items']=L
with open('test.json', 'w') as f:
    json.dump(D, f, ensure_ascii=False, indent=0)

#exercice 3
import unittest

class Test_tri_croissant(unittest.TestCase):
    def test_tri_croissant_success(self):
      actual=tri_croissant(l=[2.5,18,90,0.75,11])
      expected=[0.75,2.5,11,18,90]
      self.assertEqual(actual, expected)

